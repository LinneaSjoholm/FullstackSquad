service: take-away-backend

frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  profile: IAMvickanS
  environment:
    API_KEY: ${env:API_KEY}
    USERS_TABLE: UsersTable
    JWT_SECRET: y7Gh@eN3!5PL!03HJaQe90^&*!s78Klo
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:eu-north-1:*:*
functions:
  getMenu:
    handler: handler.getMenu
    events:
      - http:
          path: /menu
          method: get
          cors: true

  postCreateUser:
    handler: src/handlers/postcreateUser.handler
    events:
      - http:
          path: /create/user
          method: post
          cors: true

  postLoginUser:
    handler: src/handlers/postloginUser.handler
    events:
      - http:
          path: /user/login
          method: post
          cors: true

  postLoginAdmin:
    handler: src/handlers/postloginAdmin.handler
    events:
      - http:
          path: /admin/login
          method: post
          cors: true
          
resources:
  Resources:
    MenuTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MenuTable
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
custom:
  serverless-offline:
    cors:
      allowOrigins:
        - "*"
      allowHeaders:
        - Content-Type
        - x-api-key
      allowMethods:
        - GET
        - POST