service: take-away-backend

frameworkVersion: "4"

provider:
  name: aws
  runtime: nodejs18.x
  region: eu-north-1
  environment:
    API_KEY: ${env:API_KEY}  

  iam:
    role:
      statements:
        - Effect: "Allow"
          Action:
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:GetItem
            - dynamodb:PutItem
            - dynamodb:UpdateItem
            - dynamodb:DeleteItem
          Resource: "*"

functions:
  getMenu:
    handler: src/handlers/getMenu.getMenu
    events:
      - httpApi:
          path: /menu
          method: get
          cors: true

  postOrder:
    handler: src/handlers/postOrder.postOrder
    events:
      - httpApi:
          path: /order
          method: post
          cors: true

  getOrder:
    handler: src/handlers/getOrder.getOrder
    events:
      - httpApi:
          path: /order/{id}
          method: get
          cors: true

  getOrderReview:
    handler: src/handlers/getOrderReview.getOrderReview
    events:
      - httpApi:
          path: /order/review/{id}
          method: get
          cors: true

  putReviewOrder:
    handler: src/handlers/putReviewOrder.putReviewOrder
    events:
      - httpApi:
          path: /order/reviewOrder/{id}
          method: put
          cors: true

  deleteOrder:  
    handler: src/handlers/deleteOrder.deleteOrder
    events:
      - httpApi:
          path: /order/delete/{id}
          method: delete
          cors: true

  putMenuAdmin:
    handler: src/handlers/putMenuAdmin.putMenuAdmin
    events:
      - httpApi:
          path: /menu/admin
          method: put
          cors: true
          headers:
            x-api-key: true  

resources:
  Resources:
    MenuTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: MenuTable
        AttributeDefinitions:
          - AttributeName: "id"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "id"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

    OrdersTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: OrdersTable
        AttributeDefinitions:
          - AttributeName: "orderId"
            AttributeType: "S"
        KeySchema:
          - AttributeName: "orderId"
            KeyType: "HASH"
        BillingMode: PAY_PER_REQUEST

custom:
  esbuild:
    target: 'node18'
    sourcemap: true
    minify: false
    bundle: true
    loader:
      '.ts': 'ts'
      '.tsx': 'tsx'

  serverless-offline:
    cors:
      allowOrigins:
        - "*"
      allowHeaders:
        - Content-Type
        - x-api-key
      allowMethods:
        - GET
        - POST
        - DELETE
        - PUT
